apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: configure-crossplane
spec:
  entrypoint: configure-crossplane
  templates:
    - name: configure-crossplane
      steps:
        - - name: wait-for-providers
            template: crd-wait
            arguments:
              parameters:
                - name: crd-name
                  value: providers.pkg.crossplane.io
        - - name: load-aws-provider
            template: install-provider
            arguments:
              parameters:
                - name: provider-name
                  value: provider-aws
                - name: provider-package
                  value: xpkg.upbound.io/crossplane-contrib/provider-aws:v0.33.0
                - name: provider-config
                  value: aws-vault-config
        - - name: aws-config
            template: load-aws-config
        - - name: wait-for-awscrd
            template: crd-wait
            arguments:
              parameters:
                - name: crd-name
                  value: providerconfigs.aws.crossplane.io
        - - name: aws-credconfig
            template: install-aws-credconfig
    - name: install-provider
      inputs: 
        parameters:
          - name: provider-name
          - name: provider-package
          - name: provider-config
      resource:
        action: apply
        manifest: |
          apiVersion: pkg.crossplane.io/v1
          kind: Provider
          metadata:
            name: {{inputs.parameters.provider-name}}
          spec:
            package: {{inputs.parameters.provider-package}}
            controllerConfigRef:
              name: {{inputs.parameters.provider-config}}

    - name: crd-wait
      inputs:
        parameters:
          - name: crd-name
      retryStrategy:
        limit: "100"
        expression: "asInt(lastRetry.exitCode) == 1"
      resource:
        action: get
        manifest: |
          apiVersion: apiextensions.k8s.io/v1
          kind: CustomResourceDefinition
          metadata:
            name: {{inputs.parameters.crd-name}}

    - name: load-aws-config
      resource:
        action: apply
        manifest: |
          apiVersion: pkg.crossplane.io/v1alpha1
          kind: ControllerConfig
          metadata:
            name: aws-vault-config
          spec:
            args:
              - --debug
            metadata:
              annotations:
                vault.hashicorp.com/agent-inject: "true"
                vault.hashicorp.com/role: "crossplane-providers"
                vault.hashicorp.com/agent-inject-secret-creds.txt: "secret/provider-creds/aws-default"
                vault.hashicorp.com/agent-inject-template-creds.txt: |
                  {{- with secret "secret/provider-creds/aws-default" -}}
                    [default]
                    aws_access_key_id="{{ .Data.data.access_key }}"
                    aws_secret_access_key="{{ .Data.data.secret_key }}"
                  {{- end -}}
    - name: install-aws-credconfig
      resource:
        action: apply
        manifest: | 
          apiVersion: aws.crossplane.io/v1beta1
          kind: ProviderConfig
          metadata:
            name: default
          spec:
            credentials:
              source: Filesystem
              fs:
                path: /vault/secrets/creds.txt