apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: managedprojects.k8s.shred.cloud
spec:
  compositeTypeRef:
    apiVersion: k8s.shred.cloud/v1alpha1
    kind: managedproject
  resources:
    - name: namespace
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: project-namespace
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
    - name: argoapp
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: argocd-appinit
        spec:
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: Application
              metadata:
                name: myapp
                namespace: myproject
              spec:
                destination:
                  namespace: myproject
                  server: https://kubernetes.default.svc
                project: default
                source:
                  path: .
                  repoURL: http://git-gitea-http.management:3000/myproject/project_info.git
                  targetRevision: HEAD
                syncPolicy:
                  automated:
                    allowEmpty: true
                    prune: true
                  syncOptions:
                  - CreateNamespace=true
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.namespace
    - name: repo
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: project-initialization
        spec:
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              spec:
                entrypoint: go
                templates:
                  - name: go
                    container:
                      image: matthewruge/gitea-driver:latest
                      imagePullPolicy: Always
                      env:
                        - name: GITEA_USERNAME
                          value: 'gitea_admin'
                        - name: GITEA_PASSWORD
                          value: 'r8sA8CPHD9!bt6d'
                        - name: GITEA_URI
                          value: http://git-gitea-http.management:3000
                        - name: ORGNAME
                          value: orgname
                        - name: REPONAME
                          value: project_info
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.templates[0].container.env[3].value
    # - name: environments
    #   base:
    #     apiVersion: kubernetes.crossplane.io/v1alpha1
    #     kind: Object
    #     metadata:
    #       name: project-initialization
    #     spec:
    #       forProvider:
    #         manifest:
    #           apiVersion: argoproj.io/v1alpha1
    #           kind: Workflow
    #           spec:
    #             entrypoint: make-all
    #             templates:
    #               - name: make-all
    #                 steps:
    #                 - - name: build-environment
    #                     template: make-environment
    #                     arguments:
    #                       parameters:
    #                       - name: env-name
    #                         value: "{{item.name}}"
    #                       - name: env-template
    #                         value: "{{item.template}}"
    #                     withItems: 
    #                     - name: dev
    #                       template: ekscluster
    #                     - name: test
    #                       template: ekscluster
    #               - name: make-environment
    #                 resource:
    #                   action: create
    #                   successCondition: status.succeeded > 0
    #                   failureCondition: status.failed > 3
    #                   inputs:
    #                     parameters:
    #                       - name: name
    #                       - name: template
    #                   manifest: |
    #                     apiVersion: k8s.shred.cloud/v1alpha1
    #                     kind: {{inputs.parameters.env.template}}
    #                     metadata:
    #                       name: {{inputs.parameters.env.name}}
    #                     spec:
    #                       compositionSelector:
    #                         matchLabels:
    #                           provider: aws
    #                       parameters:
    #                         region: "us-east-1"
    #   patches:
    #     - fromFieldPath: metadata.name
    #       toFieldPath: spec.forProvider.manifest.metadata.namespace
    #     - fromFieldPath: spec.parameters.environments
    #       toFieldPath: spec.forProvider.manifest.spec.templates[0].steps[0][0].withItems

